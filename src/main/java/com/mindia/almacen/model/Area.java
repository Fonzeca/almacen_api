package com.mindia.almacen.model;
// Generated 14-may-2021 19:31:48 by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Area generated by hbm2java
 */
@Entity
@Table(name = "area", catalog = "almacen", uniqueConstraints = @UniqueConstraint(columnNames = "NombreArea"))
public class Area implements java.io.Serializable {

	private Integer areaId;
	private Usuario usuario;
	private String nombreArea;
	private Set<Usuario> usuarios = new HashSet<Usuario>(0);
	private Set<Usuario> usuarios_1 = new HashSet<Usuario>(0);

	public Area() {
	}

	public Area(String nombreArea) {
		this.nombreArea = nombreArea;
	}

	public Area(Usuario usuario, String nombreArea, Set<Usuario> usuarios, Set<Usuario> usuarios_1) {
		this.usuario = usuario;
		this.nombreArea = nombreArea;
		this.usuarios = usuarios;
		this.usuarios_1 = usuarios_1;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "AreaID", unique = true, nullable = false)
	public Integer getAreaId() {
		return this.areaId;
	}

	public void setAreaId(Integer areaId) {
		this.areaId = areaId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UsuarioJefe")
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@Column(name = "NombreArea", unique = true, nullable = false, length = 30)
	public String getNombreArea() {
		return this.nombreArea;
	}

	public void setNombreArea(String nombreArea) {
		this.nombreArea = nombreArea;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "area")
	public Set<Usuario> getUsuarios() {
		return this.usuarios;
	}

	public void setUsuarios(Set<Usuario> usuarios) {
		this.usuarios = usuarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "area")
	public Set<Usuario> getUsuarios_1() {
		return this.usuarios_1;
	}

	public void setUsuarios_1(Set<Usuario> usuarios_1) {
		this.usuarios_1 = usuarios_1;
	}

}
